{"version":3,"file":"static/webpack/static/development/pages/index.js.2476186a6fb63d6e5809.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Head from \"../components/head\";\n\n// https://codesandbox.io/s/creating-visualizations-with-d3-and-react-3ofdx\nimport { Stage } from \"./../components/stage\";\nimport Sidebar from \"./../components/Sidebar\";\nimport { ZoomContainer } from \"./../components/ZoomContainer\";\nimport WorldMap from \"./../components/Map\";\n\n// https://stackoverflow.com/a/30707423\nfunction jsonToQueryString(json) {\n  return (\n    \"?\" +\n    Object.keys(json)\n      .map(function(key) {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(json[key]);\n      })\n      .join(\"&\")\n  );\n}\n\nconst Home = ({ randomPlace }) => {\n  const router = useRouter();\n  const [loading, setLoading] = useState(true);\n  const [username, setUsername] = useState(undefined);\n  const [data, onSubmit] = useState({ distance: null });\n  const handleForm = (async () => {\n    const rawResponse = await fetch(\n      `https://ionized-protoceratops.glitch.me/addScore${jsonToQueryString({\n        username: username,\n        score: data.distance,\n        cho: data.cho,\n        lat: data.userClickCoordinations[0],\n        long: data.userClickCoordinations[1]\n      })}`,\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    );\n    const content = await rawResponse.json();\n\n    console.log(content);\n  })();\n\n  // async function () => {\n  //   try {\n  //     const data = fetch(\n  //       `https://ionized-protoceratops.glitch.me/addScore${jsonToQueryString({\n  //         username: username,\n  //         score: data.distance,\n  //         cho: data.cho,\n  //         lat: data.userClickCoordinations[0],\n  //         long: data.userClickCoordinations[1]\n  //       })}`,\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\"\n  //         },\n  //         mode: \"no-cors\"\n  //       }\n  //     );\n  //\n  //   } catch (e) {\n  //     console.log(e, \"error\");\n  //   }\n  // };\n\n  return (\n    <main className=\"container\">\n      <Head title=\"Home\" />\n      <Sidebar\n        data={data}\n        setLoading={setLoading}\n        loading={loading}\n        randomPlace={randomPlace}\n        handleForm={handleForm}\n        username={username}\n        setUsername={setUsername}\n      />\n      <Stage width={data.distance ? \"100%\" : \"1020px\"} height={400}>\n        <ZoomContainer data={data} finished={data.distance !== null}>\n          <WorldMap\n            data={data}\n            onSubmit={data => onSubmit(data)}\n            marker={randomPlace}\n            setLoading={loading => setLoading(loading)}\n          />\n        </ZoomContainer>\n      </Stage>\n\n      <style global jsx>\n        {`\n          .container {\n            display: grid;\n            grid-template-columns: ${data.distance ? \"2fr\" : \"1fr\"} 4fr;\n          }\n          .overlay {\n            padding: 12px;\n            overflow: hidden;\n            display: flex;\n            flex-direction: column;\n          }\n          .content {\n            background: white;\n          }\n          img {\n            height: 200px;\n          }\n          body {\n            margin: 0;\n            padding: 0;\n          }\n        `}\n      </style>\n    </main>\n  );\n};\n\nconst API_URL =\n  \"https://api.data.netwerkdigitaalerfgoed.nl/datasets/ivo/NMVW/services/NMVW-15/sparql\";\n\nconst API_QUERY = `\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dct: <http://purl.org/dc/terms/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX edm: <http://www.europeana.eu/schemas/edm/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX hdlh: <https://hdl.handle.net/20.500.11840/termmaster>\nPREFIX wgs84: <http://www.w3.org/2003/01/geo/wgs84_pos#>\nPREFIX geo: <http://www.opengis.net/ont/geosparql#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX gn: <http://www.geonames.org/ontology#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\n# e1n foto per land (met type, img, lat en long van de plaats\nSELECT *\nWHERE {\n# vind alleen foto's\n<https://hdl.handle.net/20.500.11840/termmaster1397> skos:narrower* ?type .\n?type skos:prefLabel ?typeLabel .\n?cho edm:object ?type .\n\n# ?cho dc:title ?title .\n?cho edm:isShownBy ?img .\n\n# vind bij de objecten het land\n?cho dct:spatial ?place .\n?place skos:exactMatch/gn:parentCountry ?land .\n# ?place skos:prefLabel ?placeName .\n?land gn:name ?landLabel .\n\n# vind bij de plaats van de foto de lat/long\n?place skos:exactMatch/wgs84:lat ?lat .\n?place skos:exactMatch/wgs84:long ?long .\n\n}\nOFFSET RAND() * 5\n#100000\nLIMIT 1\n`;\n\nHome.getInitialProps = async function() {\n  const res = await fetch(\n    `${API_URL}?query=${encodeURIComponent(API_QUERY)}&format=json`\n  );\n  const apiData = await res.json();\n\n  return {\n    randomPlace: apiData.results.bindings\n  };\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAJA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAFA;AAFA;AACA;AAVA;AACA;AADA;AAAA;AACA;AADA;AAiBA;AAEA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AAgDA;AACA;AACA;AAGA;AA0CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAIA;AAJA;AAOA;AADA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;A","sourceRoot":""}